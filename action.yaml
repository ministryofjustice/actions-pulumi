name: perform pulumi action 
description: pulumi preview and up for moj cross account deployment
inputs:
  stack:
    description: the stack to perform action on
    required: true
  pulumi-action:
    description: the pulumi action to perform
    required: true
  backend-url:
    description: url to login to, including relevant config profile
    required: true
  landing-arn:
    description: full arn of landing role to assume
    required: true
  aws-config-path:
    description: path to the relevant aws config in the repo
    requried: true
    default: "${{ github.action_path }}/default_aws_config.config"
  pulumi-passphrase:
    description: pulumi passphrase
    required: false
runs:
  using: composite
  steps:
    - name: pls
      shell: bash
      run : ls -a
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: eu-west-1
        role-to-assume: ${{ inputs.landing-arn }}
    - name: Upgrade AWS CLI & add aws config
      shell: bash
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        aws --version
        mkdir ~/.aws/
        cp ${{ inputs.aws-config-path }} ~/.aws/config
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Remove existing Pulumi installations
      shell: bash
      run: |
        rm -rf $HOME/.pulumi
    - name: Install Pulumi CLI
      uses: pulumi/setup-pulumi@v2
      with:
        pulumi-version: ^3.0.0
    - name: Install Python dependencies
      shell: bash
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install --upgrade -r requirements.txt; fi
    - name: login to pulumi backend
      shell: bash
      run: |
        pulumi login '${{ inputs.backend-url }}'
    - name: perform pulumi action
      shell: bash
      env:
        PULUMI_CONFIG_PASSPHRASE: ""
        INFRA_CREATOR_ROLE_NAME: "DataEngineeringGitHubAction"
      run: |
        pulumi stack select -c ${{ matrix.stack }}
        pulumi config set aws:skipCredentialsValidation true
        pulumi ${{ inputs.pulumi-action }} --refresh $(if [ ${{ inputs.pulumi-action }} = up ];then echo "--yes"; fi)  